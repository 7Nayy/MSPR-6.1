#!/bin/bash

echo "üöÄ D√âMARRAGE MONITORING WILDAWARE (Bas√© sur config dev)"
echo "===================================================="

# V√©rifier Docker
if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Docker n'est pas d√©marr√©. Veuillez le d√©marrer et r√©essayer."
    exit 1
fi
echo "‚úÖ Docker est actif"

# Arr√™ter d'abord les autres docker-compose pour √©viter les conflits
echo "üßπ Arr√™t des autres services Docker..."
docker-compose -f docker-compose.dev.yml down --remove-orphans 2>/dev/null || true
docker-compose -f docker-compose.yml down --remove-orphans 2>/dev/null || true
docker-compose -f docker-compose.monitoring-cloud.yml down --remove-orphans 2>/dev/null || true

# Lib√©rer les ports
echo "üîì Lib√©ration des ports..."
for port in 5001 9090 9100 12345; do
    if lsof -ti:$port >/dev/null 2>&1; then
        echo "   Lib√©ration du port $port..."
        lsof -ti:$port | xargs kill -9 2>/dev/null || true
    fi
done

# Cr√©er le r√©pertoire logs s'il n'existe pas
mkdir -p logs

echo "üöÄ D√©marrage du monitoring avec la config qui fonctionne..."
docker-compose -f docker-compose.monitoring-dev.yml up -d

echo "‚è≥ Attente du d√©marrage des services (20 secondes)..."
sleep 20

# V√©rifier l'√©tat des services
echo ""
echo "ü©∫ √âtat des services:"
docker-compose -f docker-compose.monitoring-dev.yml ps

echo ""
echo "üìä Test des endpoints:"
endpoints=(
    "localhost:5001|Application WildAware"
    "localhost:9090/metrics|Exporteur WildAware"
    "localhost:9100/metrics|Node Exporter"
    "localhost:12345/-/healthy|Grafana Agent"
)

for endpoint_info in "${endpoints[@]}"; do
    IFS='|' read -r endpoint name <<< "$endpoint_info"
    if curl -s --max-time 5 "http://$endpoint" >/dev/null 2>&1; then
        echo "‚úÖ $name ($endpoint) - OK"
    else
        echo "‚ö†Ô∏è  $name ($endpoint) - En cours de d√©marrage..."
    fi
done

echo ""
echo "üåê URLs d'acc√®s:"
echo "  - Application WildAware: http://localhost:5001"
echo "  - M√©triques application: http://localhost:9090/metrics"
echo "  - M√©triques syst√®me: http://localhost:9100/metrics"
echo "  - Grafana Agent: http://localhost:12345/-/healthy"
echo "  - Grafana Cloud: https://bd7nayy.grafana.net"

echo ""
echo "üîß Commandes utiles:"
echo "  - Voir les logs: docker-compose -f docker-compose.monitoring-dev.yml logs -f"
echo "  - Logs Grafana Agent: docker-compose -f docker-compose.monitoring-dev.yml logs -f grafana-agent"
echo "  - Logs Application: docker-compose -f docker-compose.monitoring-dev.yml logs -f wildaware-app"
echo "  - Arr√™ter: docker-compose -f docker-compose.monitoring-dev.yml down"

echo ""
echo "‚úÖ MONITORING D√âMARR√â !"
echo "üìä Votre application fonctionne sur le port 5001 (comme en dev)"
echo "üìà Les m√©triques sont collect√©es et envoy√©es vers Grafana Cloud"